dnl Copyright (c) 2010
dnl         Tomasz Pieniążek <t.pieniazek@gazeta.pl>
dnl

dnl ***************************
dnl *** Version information ***
dnl ***************************
m4_define([archmanager_version_major], [0])
m4_define([archmanager_version_minor], [0])
m4_define([archmanager_version_micro], [1])
m4_define([archmanager_version_nano], [])
m4_define([archmanager_version_build], [r1])
m4_define([archmanager_version_tag], [])
m4_define([archmanager_version], [archmanager_version_major().archmanager_version_minor().archmanager_version_micro()ifelse(archmanager_version_nano(), [], [], [.archmanager_version_nano()])ifelse(archmanager_version_tag(), [svn], [archmanager_version_tag()-archmanager_version_build()], [archmanager_version_tag()])])

dnl ***************************
dnl *** Initialize autoconf ***
dnl ***************************
AC_COPYRIGHT([Copyright (c) 2010
        Tomasz Pieniążek <t.pieniazek@gazeta.pl>.])
AC_INIT([archmanager], [archmanager_version()], [])
AC_PREREQ([2.50])
AC_CANONICAL_TARGET()

dnl ***************************
dnl *** Initialize automake ***
dnl ***************************
AM_INIT_AUTOMAKE([AC_PACKAGE_TARNAME()], [AC_PACKAGE_VERSION()])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE()

dnl *******************************
dnl *** Check for UNIX variants ***
dnl *******************************
AC_AIX()
AC_ISC_POSIX()
AC_MINIX()

dnl ********************************
dnl *** Check for basic programs ***
dnl ********************************
AC_PROG_CC()
AC_PROG_LD()
AC_PROG_INSTALL()
AC_PROG_INTLTOOL([0.31], [no-xml])

dnl **************************
dnl *** Initialize libtool ***
dnl **************************
AC_DISABLE_STATIC()
AC_PROG_LIBTOOL()

dnl ***********************************************
dnl *** Work-around system-specific limitations ***
dnl ***********************************************
AC_SYS_LARGEFILE()

dnl **********************************
dnl *** Check for standard headers ***
dnl **********************************
AC_HEADER_STDC()

dnl ************************************
dnl *** Check for standard functions ***
dnl ************************************
AC_CHECK_FUNCS([strcasestr mkdtemp socket])

dnl ***********************************
dnl *** Check for required packages ***
dnl ***********************************

dnl ==============================================
dnl Maemo/Hildon based User Interface

AC_ARG_ENABLE(hildon,
	AS_HELP_STRING([--enable-hildon],[Build with Maemo/Hildon support]),
    enable_hildon="$enableval",
    enable_hildon=no)

if test "x$enable_hildon" = xyes ; then
    PKG_CHECK_MODULES(HILDON,
                      hildon-1 hildon-fm-2 libosso,
                      HAVE_HILDON=yes, HAVE_HILDON=no)
fi

if test "x$HAVE_HILDON" = xyes ; then
    AC_DEFINE(GNM_USE_HILDON, 1, [Build with Maemo/Hildon support])
fi

AM_CONDITIONAL(USE_HILDON, test "x$HAVE_HILDON" = xyes)
AC_SUBST(HILDON_CFLAGS)
AC_SUBST(HILDON_LIBS)

PKG_PROG_PKG_CONFIG(0.18)

archmanager_requiments1="
	glib-2.0		>= 2.14.0
"
archmanager_requiments2="
	gtk+-2.0		>= 2.14.0
"

archmanager_requiments3="
	gconf-2.0		>= 2.14.0
"

archmanager_requiments4="
	gnome-vfs-2.0		>= 2.14.0
"

PKG_CHECK_MODULES(GLIB, [$archmanager_requiments1])
PKG_CHECK_MODULES(GTK, [$archmanager_requiments2])
PKG_CHECK_MODULES(GCONF, [$archmanager_requiments3])
PKG_CHECK_MODULES(GVFS, [$archmanager_requiments4])

AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

AC_SUBST(GCONF_CFLAGS)
AC_SUBST(GCONF_LIBS)

AC_SUBST(GVFS_CFLAGS)
AC_SUBST(GVFS_LIBS)

AC_OUTPUT([
Makefile
po/Makefile.in
src/Makefile
icons/Makefile
pixmaps/Makefile
])

dnl *********************
dnl *** Print summary ***
dnl *********************
echo "----------------------------------------"
echo "$PACKAGE_TARNAME $PACKAGE_VERSION"
echo ""
echo "The binary will be installed in $prefix/bin"
echo ""
echo "Configure finished, type 'make' to build."
